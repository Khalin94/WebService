language: java
jdk:
  - openjdk8

branches:
  only:
    - master

before_install:
  - chmod +x gradlew

cache:
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.gradle'

script: "./gradlew clean build"

#before_deploy:
#  - zip -r webservice *
#  - mkdir -p deploy
#  - mv webservice.zip deploy/webservice.zip

before_deploy:
  - mkdir -p before-deploy
  - cp scripts/*.sh before-deploy/
  - cp appspec.yml before-deploy/
  - cp build.libs/*.jar before-deploy/
  - cd before-deploy && zip -r before-deploy *
  - cd ../ && mkdir -p deploy
  - mv before-deploy/before-deploy.zip deploy/webservice.zip

#before_deploy:
#  - mkdir -p before-deploy # zip에 포함시킬 파일들을 담을 디렉토리 생성
#  - cp scripts/*.sh before-deploy/
# - cp appspec.yml before-deploy/
#  - cp build/libs/*.jar before-deploy/
#  - cd before-deploy && zip -r before-deploy * # before-deploy로 이동후 전체 압축
#  - cd ../ && mkdir -p deploy # 상위 디렉토리로 이동후 deploy 디렉토리 생성
#  - mv before-deploy/before-deploy.zip deploy/freelec-springboot2-webservice.zip # deploy로 zip파일 이동
  # - mv freelec-springboot2-webservice.zip deploy/freelec-springboot2-webservice.zip

deploy:
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY #TRAVIS에 등록된 key
    secret_access_key: $AWS_SECRET_KEY #TRAVIS에 등록된 secret key
    bucket: webservice-build-file #s3 bucket
    region: ap-northeast-2
    skip_cleanup: true
    acl: private
    local_dir: deploy
    wait-until-deployed: true

  - provider: codedeploy
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key: $AWS_SECRET_KEY
    bucket: webservice-build-file
    key: webservice.zip
    bundle_type: zip
    application: webservice
    deployment_group: webservice-group
    region: ap-northeast-2
    wait-until-deployed: true


notifications:
  email:
    recipients:
      - mpzx1102@gmail.com